#include <iostream>
#include <string>
#define random(min,max) (min + rand() % (min-max+1))
using namespace std;

int indexstrvstr(string arr, string word) {
	int size1 = arr.length();
	int size2 = word.length();

	for (int i = 0; i < size1; i++) {
		if (arr[i] == word[0]) {
			for (int j = 0; j < size2; j++) {
				if (arr[i + j] != word[j]) {
					break;
				}
				else if (j == size2 - 1) {
					return i;
				}
			}
		}
	}
	return -1;
}

int countsym(string arr) {
	int count = 0;
	for (int i = 0; arr[i] != '\0'; i++) {
		count++;
	}
	return count;
}

void delstolbec(int**& arr, int index) {
	int size1 = _msize(arr) / sizeof(arr[0]);
	int size2 = _msize(arr[0]) / sizeof(arr[0][0]);

	int** newarr = new int* [size1];
	for (int i = 0; i < size1; i++) {
		newarr[i] = new int[size2 - 1];
		for (int j = 0, k = 0; j < size2; j++) {
			if (j != index) {
				newarr[i][k++] = arr[i][j];
			}
		}
	}
	delete[]arr;
	arr = newarr;
}

void delminstroka(int**& arr) {
	int size1 = _msize(arr) / sizeof(arr[0]);
	int size2 = _msize(arr[0]) / sizeof(arr[0][0]);
	int index = 0, min = arr[0][0];
	for (int i = 0; i < size1; i++) {
		for (int j = 0; j < size2; j++) {
			if (arr[i][j] < min) {
				min = arr[i][j];
				index = i;
			}
		}
	}
	int** newarr = new int* [size1];
	for (int i = 0, k = 0; i < size1; i++) {
		newarr[i] = new int[size2];
		if (i == index) {
			continue;
		}
		for (int j = 0; j < size2; j++) {
			newarr[k][j] = arr[i][j];
		}
		k++;
	}
	delete[]arr;
	arr = newarr;
}

void copyarr(int** arr1, int** arr2) {
	int size1 = _msize(arr1) / sizeof(arr1[0]);
	int size2 = _msize(arr1) / sizeof(arr1[0]);

	for (int i = 0; i < size1; i++) {
		arr1[i] = new int[size2];
		for (int j = 0; j < size2; j++) {
			arr1[i][j] = arr2[i][j];
		}
	}
}

void delelarray(int*& arr, int el) {
	int size = _msize(arr) / sizeof(arr[0]);
	int* newarr = new int[size - 1];
	for (int i = 0, j = 0; i < size; i++) {
		newarr[j] = arr[i];
		j++;
		if (arr[i] == el) {
			j--;
		}
	}
	delete[]arr;
	arr = newarr;
}

void addarr(int**& arr, int* arr2) {
	int size1 = _msize(arr) / sizeof(arr[0]);
	int size2 = _msize(arr) / sizeof(arr[0]);

	int** newarr = new int* [size1 + 1];
	for (int i = 0; i < size1; i++) {
		newarr[i] = arr[i];
	}

	newarr[size1] = arr2;

	arr = newarr;
}

int main()
{
	srand(time(NULL));

	//1
	/*float a, b, c, d;
	cin >> a >> b >> c >> d;
	cout << (a + b + c + d) / 4 << endl;*/

	//2
	/*int a = 2, b = 40;
	for (int i = a; i <= b; i+=2) {
		cout << i << " ";
	}*/

	//3
	/*int a;
	cin >> a;
	for (int i = 0; i < a; i++) {
		cout << " " << endl;
		for (int j = 0; j < i; j++) {
			cout << "*";
		}
	}*/

	//4
	/*int a, count = 0;
	cin >> a;
	while (a > 0) {
		count++;
		a /= 10;
	}
	cout << count << "\n";
	system("pause");
	return 0;*/

	// 5
	/*int array[5];
	int min, max;
	cin >> min >> max;
	if (min > max) {
		swap(min, max);
	}
	for (int i = 0; i < 5; i++) {
		array[i] = random(min, max);
		cout << array[i] << " ";
	}*/

	// 6
	/*int** array2 = new int* [10];
	for (int i = 0; i < 10; i++) {
		array2[i] = new int[10];
	}
	for (int i = 0; i < 10; i++) {
		for (int j = 0; j < 10; j++) {
			array2[i][j] = random(1, 9);
		}
	}
	int maxstroka = 0, maxstrokaindex, counter;
	for (int i = 0; i < 10; i++) {
		for (int j = 0; j < 10; j++) {
			counter += array2[i][j];
		}
		if (maxstroka < counter) {
			maxstroka = counter;
			maxstrokaindex = i;
		}
	}
	cout << maxstrokaindex;*/

	// 7
	/*int** array3 = new int* [3];
	int** array4 = new int* [3];
	for (int i = 0; i < 3; i++) {
		array4[i] = new int[3];
		for (int j = 0; j < 3; j++) {
			array4[i][j] = j;
			cout << array4[i][j] << " ";
		}
		cout << endl;
	}
	copyarr(array3, array4);
	for (int i = 0; i < 3; i++) {
		for (int j = 0; j < 3; j++) {
			cout << array3[i][j] << " ";
		}
		cout << endl;
	}*/

	// 8
	/*int* array5 = new int[5];
	for (int i = 0; i < 5; i++) {
		array5[i] = i;
		cout << array5[i] << " ";
	}
	cout << endl;
	delelarray(array5, 2);
	for (int i = 0; i < 4; i++) {
		cout << array5[i] << " ";
	}*/

	// 9
	/*int** array6 = new int* [3];
	int* array7 = new int[3];
	for (int i = 0; i < 3; i++) {
		array6[i] = new int[3];
		for (int j = 0; j < 3; j++) {
			array6[i][j] = i;
			cout << array6[i][j] << " ";
		}
		cout << endl;
	}
	cout << endl;
	for (int i = 0; i < 3; i++) {
		array7[i] = i;
		cout << array7[i] << " ";
	}
	cout << endl << endl;
	addarr(array6, array7);
	for (int i = 0; i < 4; i++) {
		for (int j = 0; j < 3; j++) {
			cout << array6[i][j] << " ";
		}
		cout << endl;
	}*/

	// 10
	/*int** array8 = new int* [3];
	for (int i = 0; i < 3; i++) {
	array8[i] = new int[3];
	for (int j = 0; j < 3; j++) {
		array8[i][j] = i;
		cout << array8[i][j] << " ";
	}
	cout << endl;
}
	delstolbec(array8, 2);
	for (int i = 0; i < 2; i++) {
	for (int j = 0; j < 2; j++) {
		cout << array8[i][j] << " ";
	}
	cout << endl;
	}*/

	// 11
	/*int** array9 = new int* [3];
	for (int i = 0; i < 3; i++) {
	array9[i] = new int[3];
	for (int j = 0; j < 3; j++) {
		array9[i][j] = i;
		cout << array9[i][j] << " ";
	}
	cout << endl;
	}
	delminstroka(array9);
	for (int i = 0; i < 2; i++) {
	for (int j = 0; j < 3; j++) {
		cout << array9[i][j] << " ";
	}
	cout << endl;
	}*/

	// 12
	/*string arr = "Love history histo";
	string word = "his";
	cout << indexstrvstr(arr, word);*/

	// 13
	/*string arr1 = "abcde";
	cout << countsym(arr1);*/
}
